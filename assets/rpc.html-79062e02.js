import{_ as a,r as c,o as n,c as p,a as e,b as o,d as t,e as h}from"./app-097a6a1b.js";const l={},i=h('<h1 id="rpc" tabindex="-1"><a class="header-anchor" href="#rpc" aria-hidden="true">#</a> rpc</h1><p>其实是主要想聊下关于rpc(Remote Procedure Call)的问题，其实广义来说，http 协议也是一种 rpc，但其效率较低，因为数据传输格式比较浪费存储空间 java中本身自带 rpc 的解决方案，然而因为java 对象的序列化，其它语言不可读 【在仔细阅读完brpc的文档之后，希望自己能够再来做一个比较合适的补充】</p><p>在读了《凤凰架构》一书之后，对RPC又有了一些自己的感悟。 RPC要解决的三个问题： 1）如何表示数据 2）如何传递数据 3）如何确定方法</p><h2 id="grpc与brpc的异同" tabindex="-1"><a class="header-anchor" href="#grpc与brpc的异同" aria-hidden="true">#</a> grpc与brpc的异同</h2><p>1、 grpc采用 http2，而brpc 支持http中的ProgressiveReader, h2的streams, streaming rpc, 和专门的流式协议RTMP</p><h2 id="流式-rpc" tabindex="-1"><a class="header-anchor" href="#流式-rpc" aria-hidden="true">#</a> 流式 RPC</h2><p>某些场景下，客户端或者服务端需要发送的数据特别大。BRPC的文档中提到 流式 RPC 保证:</p><ol><li>有消息边界</li><li>接收消息的顺序和发送消息的顺序严格一致 这个一致理论上应该是TCP协议本身来保证的</li><li>全双工</li><li>支持流控 这个应该也是TCP的拥塞控制来保证的</li><li>提供超时提醒</li></ol><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档" aria-hidden="true">#</a> 参考文档</h2>',9),s={href:"https://en.wikipedia.org/wiki/Remote_procedure_call",target:"_blank",rel:"noopener noreferrer"},d={href:"https://brpc.apache.org/zh/docs/overview/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://www.grpc.io/docs/what-is-grpc/introduction/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://developers.google.com/protocol-buffers/docs/overview",target:"_blank",rel:"noopener noreferrer"},f={href:"https://zhuanlan.zhihu.com/p/161577635",target:"_blank",rel:"noopener noreferrer"},u={href:"https://chai2010.cn/advanced-go-programming-book/ch4-rpc/ch4-04-grpc.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://brpc.apache.org/zh/docs/client/streaming-rpc/",target:"_blank",rel:"noopener noreferrer"};function m(v,k){const r=c("ExternalLinkIcon");return n(),p("div",null,[i,e("ol",null,[e("li",null,[e("a",s,[o("https://en.wikipedia.org/wiki/Remote_procedure_call"),t(r)])]),e("li",null,[e("a",d,[o("https://brpc.apache.org/zh/docs/overview/"),t(r)])]),e("li",null,[e("a",_,[o("https://www.grpc.io/docs/what-is-grpc/introduction/"),t(r)])]),e("li",null,[e("a",g,[o("https://developers.google.com/protocol-buffers/docs/overview"),t(r)])]),e("li",null,[e("a",f,[o("https://zhuanlan.zhihu.com/p/161577635"),t(r)])]),e("li",null,[e("a",u,[o("https://chai2010.cn/advanced-go-programming-book/ch4-rpc/ch4-04-grpc.html"),t(r)])]),e("li",null,[e("a",b,[o("https://brpc.apache.org/zh/docs/client/streaming-rpc/"),t(r)])])])])}const x=a(l,[["render",m],["__file","rpc.html.vue"]]);export{x as default};
