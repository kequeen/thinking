import{_ as n,r as t,o,c,a as e,b as a,d as h,e as d}from"./app-47e324c0.js";const s={},i=d('<h1 id="关于编程语言" tabindex="-1"><a class="header-anchor" href="#关于编程语言" aria-hidden="true">#</a> 关于编程语言</h1><p>为什么我们还是会去谈编程语言？<br> 虽然我们日常工作中的很多内容其实是与编程语言无关的，比如如何去组织工程项目，如何去做需求分析，项目管理 但编程语言本身还是会影响我们的开发效率的，比如你用C语言去写一个 web 服务，肯定比用 php 去写，要复杂得多，你要自己去管理进程，监听端口、建立与释放连接，会过多关注于底层的技术细节，而不是去花更多的精力在更高的抽象上<br> 语言本身并无优劣之分，只是适应的场景不同。<br> 编程语言更像是术，而决定我们工作效率的是术与道，道的话其实是某些与语言无关的东西，例如你如何去做技术选型、系统设计、如何做到高内聚低耦合等，这些与编程语言无关的东西。</p><h2 id="如何快速掌握一门编程语言" tabindex="-1"><a class="header-anchor" href="#如何快速掌握一门编程语言" aria-hidden="true">#</a> 如何快速掌握一门编程语言</h2><p>市场上各类书籍，《7天7语言》，《21天精通c++》等 所有语言本身都是图灵等价的，抽象能力虽有差异，但实际而言，其实并无太大差异</p><h2 id="语言的执行效率的区别" tabindex="-1"><a class="header-anchor" href="#语言的执行效率的区别" aria-hidden="true">#</a> 语言的执行效率的区别</h2><p>为什么不同的语言的执行效率有差，语言本身的运行模型有什么区别？</p><p>区分计算密集型与IO密集型</p><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档" aria-hidden="true">#</a> 参考文档</h2>',8),l={href:"https://www.zhihu.com/question/38032439/answer/84176970",target:"_blank",rel:"noopener noreferrer"};function p(_,f){const r=t("ExternalLinkIcon");return o(),c("div",null,[i,e("p",null,[a("1、"),e("a",l,[a("为啥 Erlang 没有像 Go、Scala 语言那样崛起？ - 布丁的回答 - 知乎"),h(r)])])])}const x=n(s,[["render",p],["__file","index.html.vue"]]);export{x as default};
