import{_ as t,r as i,o,c as h,a as e,b as a,d as n,e as l}from"./app-097a6a1b.js";const d={},c=e("h1",{id:"kafka",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#kafka","aria-hidden":"true"},"#"),a(" kafka")],-1),s=e("p",null,"kafka作为目前最流行的消息队列，还是有很多值得我们学习的地方的",-1),f=e("h2",{id:"设计思想",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#设计思想","aria-hidden":"true"},"#"),a(" 设计思想")],-1),k={href:"https://kafka.apachecn.org/documentation.html#majordesignelements",target:"_blank",rel:"noopener noreferrer"},p=l('<p>现代操作系统提供了read-ahead和write-behind的技术，其实已经是做了很多优化了。</p><h3 id="关于kafka性能上的优化" tabindex="-1"><a class="header-anchor" href="#关于kafka性能上的优化" aria-hidden="true">#</a> 关于kafka性能上的优化</h3><ol><li>顺序读写，利用硬盘顺序读写的高性能 ps:即使是SSD，随机读写的速度也是低于顺序读写的。</li><li>支持批处理，将多个消息打包成一组</li><li>支持sendfile，利用了零拷贝相关的技术 允许操作系统将数据从pagecache直接发送到网络</li><li>端到端的批量压缩</li></ol><h2 id="高可用" tabindex="-1"><a class="header-anchor" href="#高可用" aria-hidden="true">#</a> 高可用</h2><h2 id="横向扩展" tabindex="-1"><a class="header-anchor" href="#横向扩展" aria-hidden="true">#</a> 横向扩展</h2><h2 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题" aria-hidden="true">#</a> 常见问题</h2><ol><li>关于生产者发布消息到topic，topic如何负载均衡 1）手动指定将记录分配到某个partition中 2）循环方式实现负载均衡 3）某些语义分区函数</li></ol><p>如果要保证消息消费的有序性，就只能一个partition</p><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档" aria-hidden="true">#</a> 参考文档</h2>',9),_={href:"https://ifeve.com/kafka-design-2/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://spongecaptain.cool/SimpleClearFileIO/1.%20page%20cache.html",target:"_blank",rel:"noopener noreferrer"};function m(x,b){const r=i("ExternalLinkIcon");return o(),h("div",null,[c,s,f,e("p",null,[a("关于其相关的设计思考，可以看"),e("a",k,[a("这篇文档"),n(r)]),a(",")]),p,e("ol",null,[e("li",null,[e("a",_,[a("https://ifeve.com/kafka-design-2/"),n(r)])]),e("li",null,[e("a",u,[a("关于page cache"),n(r)])])])])}const v=t(d,[["render",m],["__file","kafka.html.vue"]]);export{v as default};
