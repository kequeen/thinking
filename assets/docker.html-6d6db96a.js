import{_ as r,r as o,o as c,c as n,a as e,b as i,d as t,e as d}from"./app-47e324c0.js";const h={},s=d('<h1 id="关于docker" tabindex="-1"><a class="header-anchor" href="#关于docker" aria-hidden="true">#</a> 关于docker</h1><p>在docke之前，在更早之前出现的应该是虚拟机，容器与虚拟机的区别在于</p><blockquote><p>容器是将操作系统层虚拟化，虚拟机则是虚拟化硬件</p></blockquote><h2 id="资源分离" tabindex="-1"><a class="header-anchor" href="#资源分离" aria-hidden="true">#</a> 资源分离</h2><p>利用linux的cgroups和namespace技术，</p><ol><li>namespace隔离了应用程序中程序的视野，包括进程树，网络，用户id，以及挂载的文件系统</li><li>cgroups则提供了资源的隔离，包括CPU、存储器、block I/O与网络</li></ol><h2 id="存储" tabindex="-1"><a class="header-anchor" href="#存储" aria-hidden="true">#</a> 存储</h2><p>容器的数据如何存储在宿主机的操作系统上</p><h2 id="网络" tabindex="-1"><a class="header-anchor" href="#网络" aria-hidden="true">#</a> 网络</h2><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档" aria-hidden="true">#</a> 参考文档</h2>',10),l={href:"https://zh.wikipedia.org/wiki/Docker",target:"_blank",rel:"noopener noreferrer"};function p(k,_){const a=o("ExternalLinkIcon");return c(),n("div",null,[s,e("ol",null,[e("li",null,[e("a",l,[i("https://zh.wikipedia.org/wiki/Docker"),t(a)])])])])}const f=r(h,[["render",p],["__file","docker.html.vue"]]);export{f as default};
