import{_ as r,r as t,o as n,c as h,a as e,b as c,d as i,e as o}from"./app-47e324c0.js";const d={},s=o('<h1 id="rabbitmq" tabindex="-1"><a class="header-anchor" href="#rabbitmq" aria-hidden="true">#</a> rabbitmq</h1><p>用erlang构建的消息队列 只要以服务器主动推为主</p><h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h2><h3 id="横向扩展方案" tabindex="-1"><a class="header-anchor" href="#横向扩展方案" aria-hidden="true">#</a> 横向扩展方案</h3><p>因为分片或者镜像的方案</p><p>用户的请求其实是可能打到不同的节点上的，会再经过一次转发，会有损耗</p><h2 id="镜像模式" tabindex="-1"><a class="header-anchor" href="#镜像模式" aria-hidden="true">#</a> 镜像模式</h2><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档" aria-hidden="true">#</a> 参考文档</h2>',8),l={href:"https://www.jianshu.com/p/63642a48b9ec",target:"_blank",rel:"noopener noreferrer"};function b(_,p){const a=t("ExternalLinkIcon");return n(),h("div",null,[s,e("ol",null,[e("li",null,[e("a",l,[c("https://www.jianshu.com/p/63642a48b9ec"),i(a)])])])])}const f=r(d,[["render",b],["__file","rabbitmq.html.vue"]]);export{f as default};
