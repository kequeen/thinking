import{_ as n,o as s,c as a,e as t}from"./app-097a6a1b.js";const e={},o=t(`<h1 id="双指针" tabindex="-1"><a class="header-anchor" href="#双指针" aria-hidden="true">#</a> 双指针</h1><p>其实双指针也算是我们很常见的一种问题。 双指针法是一种常见的解决问题的技巧，它通常用于在数组、链表或字符串等数据结构上执行一些特定的操作。以下是一些常见的双指针法的应用场景：</p><ol><li><p><strong>快慢指针：</strong></p><ul><li><strong>检测环形链表：</strong> 使用两个指针，一个每次移动一个步长，另一个每次移动两个步长。如果链表中存在环，它们最终会在环中相遇。</li><li><strong>链表中倒数第 k 个节点：</strong> 使用两个指针，它们之间的距离是 k。当快指针到达链表末尾时，慢指针即为倒数第 k 个节点。</li></ul></li><li><p><strong>左右指针：</strong></p><ul><li><strong>二分查找：</strong> 在有序数组中使用左右指针来查找目标元素。通过比较中间元素与目标值的大小，不断缩小搜索范围。</li><li><strong>三数之和：</strong> 在数组中找到所有不重复的三元组，使得三元组的和为零。可以使用左右指针来遍历数组。</li></ul></li><li><p><strong>滑动窗口：</strong></p><ul><li><strong>最小覆盖子串：</strong> 给定一个字符串 S 和一个字符串 T，在 S 中找到最小的连续子串，使得子串包含 T 中所有字符。使用左右指针来维护窗口，移动右指针扩展窗口，移动左指针缩小窗口。</li><li><strong>找到字符串中所有字母异位词：</strong> 在一个字符串中找到所有和给定字符串异位的子串。同样使用滑动窗口来处理。</li></ul></li><li><p><strong>两数之和：</strong></p><ul><li><strong>反转对：</strong> 给定一个数组，计算其中有多少个反转对。可以使用归并排序的思想，通过两个指针分别指向两个子数组，计算反转对的数量。</li></ul></li><li><p><strong>容器盛水最多：</strong></p><ul><li><strong>接雨水：</strong> 给定 n 个非负整数表示每个宽度为 1 的柱子的高度，计算按此排列的柱子，下雨之后能接多少雨水。可以使用两个指针从两端向中间移动，维护一个当前最大高度，逐步计算能够接到的雨水。</li></ul></li></ol><p>这些只是双指针法的一些经典应用场景。在解决问题时，你可以考虑使用双指针法来简化问题，提高解决问题的效率。</p><h2 id="典型问题" tabindex="-1"><a class="header-anchor" href="#典型问题" aria-hidden="true">#</a> 典型问题</h2><h3 id="买卖股票的最佳时机" tabindex="-1"><a class="header-anchor" href="#买卖股票的最佳时机" aria-hidden="true">#</a> 买卖股票的最佳时机</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">//买卖股票的最佳时机，https://leetcode.cn/leetbook/read/top-interview-questions-easy/xn8fsh/</span>
<span class="token keyword">func</span> <span class="token function">maxProfit</span><span class="token punctuation">(</span>prices <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
	profit <span class="token operator">:=</span> <span class="token number">0</span>
	minPrice <span class="token operator">:=</span> prices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>prices<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> minPrice <span class="token operator">&gt;</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token punctuation">{</span>
			minPrice <span class="token operator">=</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span>minPrice <span class="token operator">&gt;</span> profit <span class="token punctuation">{</span>
			profit <span class="token operator">=</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> minPrice
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> profit
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),p=[o];function i(l,c){return s(),a("div",null,p)}const u=n(e,[["render",i],["__file","tow_pointer.html.vue"]]);export{u as default};
